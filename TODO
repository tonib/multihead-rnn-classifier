TODO:
- prediction head. If nclasses = 2, use head_lib._binary_logistic_head_with_sigmoid_cross_entropy_loss (see tensorflow rnn.py > RNNClassifier)
- Use tfrecord files? (https://medium.com/mostly-ai/tensorflow-records-what-they-are-and-how-to-use-them-c46bc4bbb564)
- Change DataFile organization: Store an array for each column
- Add cfg to set if csv files have header row, default true

REMINDERS

git push -u origin master

tensorboard --logdir model
http://localhost:6006

Estimator inference performance / Serving model / Use of Predictor:
https://github.com/MtDersvan/tf_playground/blob/master/wide_and_deep_tutorial/wide_and_deep_basic_serving.md
https://github.com/tensorflow/tensorflow/issues/4648
https://gist.github.com/mikeoconnor0308/521ae2eb1555edc6550014ce0500e6a2
https://cs230-stanford.github.io/tensorflow-input-data.html#introduction-to-tfdata-with-a-text-example
https://highnoongmt.wordpress.com/2015/05/22/lisls-stis-recurrent-neural-networks-for-folk-music-generation/

Export model and predict / serve:
    http://shzhangji.com/blog/2018/05/14/serve-tensorflow-estimator-with-savedmodel/


* saved_model_cli:
    saved_model_cli show --dir=exportedmodel/1550399753 --tag_set serve --signature_def predict

tensorflow_model_server --port=9000 --model_base_path=exportedmodel/1545244360

START WITH THIS:
https://stackoverflow.com/questions/46098863/how-to-import-an-saved-tensorflow-model-train-using-tf-estimator-and-predict-on/46139198

222 CPM -> 48 WPM
3,7 CPS -> 0,8 WPS

requirements:
tensorflow 1.2

Install Tensorflow in Windows with virtualenv
    cd [PROJECTDIR]
    virtualenv --system-site-packages -p python ./venv
    .\venv\Scripts\activate
    pip install --upgrade pip
    pip list
    pip install --upgrade tensorflow
    python -c "import tensorflow as tf; tf.enable_eager_execution(); print(tf.reduce_sum(tf.random_normal([1000, 1000])))"

Install Tensorflow in Linux with virtualenv
    virtualenv --system-site-packages -p python3 ./venv
    source ./venv/bin/activate
    pip install --upgrade pip
    pip list
    pip install --upgrade tensorflow
    python -c "import tensorflow as tf; tf.enable_eager_execution(); print(tf.reduce_sum(tf.random_normal([1000, 1000])))"


# Sample FILE START

# Sample "FOR"

